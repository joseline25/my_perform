# Generated by Django 4.2.7 on 2024-02-14 09:02

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Objective',
            fields=[
                ('objective_id', models.AutoField(primary_key=True, serialize=False)),
                ('objective_name', models.CharField(blank=True, max_length=300, null=True)),
                ('associated_task', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('repeat_date', models.CharField(blank=True, choices=[('Daily', 'Daily'), ('Weekly', 'Weekly'), ('Monthly', 'Monthly')], max_length=100, null=True)),
                ('deadline', models.DateTimeField(blank=True, null=True)),
                ('action_phrase', models.CharField(blank=True, max_length=300)),
                ('number', models.IntegerField()),
                ('units', models.CharField(max_length=10)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('priority', models.CharField(choices=[('Low', 'Low'), ('Intermediate', 'Intermediate'), ('High', 'High')], max_length=100)),
                ('complexity', models.CharField(choices=[('Easy', 'Easy'), ('Hard', 'Hard')], max_length=100)),
                ('objective_type', models.CharField(choices=[('Financial', 'Financial'), ('Non-Financial', 'Non-Financial')], max_length=100)),
                ('dog', models.TextField()),
                ('is_draft', models.BooleanField(default=False)),
                ('repeat', models.BooleanField(default=False)),
                ('assign_to_to_id', models.PositiveIntegerField(blank=True, null=True)),
                ('assign_to', models.ManyToManyField(blank=True, related_name='objectives_assigned_to', to=settings.AUTH_USER_MODEL)),
                ('assign_to_to_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('created_by', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='objectives_created', to=settings.AUTH_USER_MODEL)),
                ('evaluator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='evaluator', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('skill_id', models.AutoField(primary_key=True, serialize=False)),
                ('skill_name', models.CharField(max_length=100)),
                ('skill_description', models.TextField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taskCode', models.CharField(max_length=50)),
                ('summary', models.TextField(blank=True)),
                ('achievement', models.CharField(choices=[('Work-Product', 'Work-Product'), ('Deliverable', 'Deliverable'), ('Learning', 'Learning'), ('Miscellaneous', 'Miscellaneous')], default='Deliverable', max_length=100)),
                ('duration', models.DecimalField(decimal_places=3, max_digits=10)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected'), ('Review', 'Review')], default='Pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(max_length=300)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TeamTool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='objective.team')),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='UserTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='objective.team')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tool',
            fields=[
                ('tool_id', models.AutoField(primary_key=True, serialize=False)),
                ('tool_name', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.TextField(blank=True, max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('teams', models.ManyToManyField(related_name='tools', through='objective.TeamTool', to='objective.team')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='teamtool',
            name='tool_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='objective.tool'),
        ),
        migrations.AddField(
            model_name='teamtool',
            name='updated_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='TeamSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('skill_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='objective.skill')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='objective.team')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.AddField(
            model_name='team',
            name='skills',
            field=models.ManyToManyField(related_name='skills', through='objective.TeamSkill', to='objective.skill'),
        ),
        migrations.AddField(
            model_name='team',
            name='users',
            field=models.ManyToManyField(through='objective.UserTeam', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ObjectiveTool',
            fields=[
                ('objective_tool_id', models.AutoField(primary_key=True, serialize=False)),
                ('objective_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='objective.objective')),
                ('tool_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='objective.tool')),
            ],
        ),
        migrations.CreateModel(
            name='ObjectiveSkill',
            fields=[
                ('objective_skill_id', models.AutoField(primary_key=True, serialize=False)),
                ('objective_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='objective.objective')),
                ('skill_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='objective.skill')),
            ],
        ),
        migrations.CreateModel(
            name='ObjectiveDraft',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_draft', models.BooleanField(default=True)),
                ('objective', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='objective.objective')),
            ],
        ),
        migrations.AddField(
            model_name='objective',
            name='skills',
            field=models.ManyToManyField(blank=True, related_name='objectives_skill', to='objective.skill'),
        ),
        migrations.AddField(
            model_name='objective',
            name='tools',
            field=models.ManyToManyField(blank=True, related_name='objectives_tool', to='objective.tool'),
        ),
        migrations.AddField(
            model_name='objective',
            name='visible_to',
            field=models.ManyToManyField(blank=True, related_name='visible_objectives', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='KPI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField()),
                ('number', models.DecimalField(decimal_places=1, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'), 'Amount must be a positive interger')])),
                ('unit', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('objective', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='objective_kpis', to='objective.objective')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Collaboration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('members', models.ManyToManyField(related_name='collaborations', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(db_column='task', on_delete=django.db.models.deletion.CASCADE, to='objective.task')),
            ],
        ),
    ]
